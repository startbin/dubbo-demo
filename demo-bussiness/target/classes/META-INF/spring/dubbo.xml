<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
 	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
	">
<!-- 	http://code.alibabatech.com/schema/dubbo https://raw.githubusercontent.com/alibaba/dubbo/master/dubbo-config/dubbo-config-spring/src/main/resources/META-INF/dubbo.xsd -->

	<!-- <dubbo:application name="demo-manage" owner="sunqinbo" organization="dubbox" logger="log4j" /> -->
	<!-- <dubbo:application name="${dubbo.application.name}" owner="${dubbo.application.owner}" logger="log4j" /> -->
	<!-- 监控中心 -->
<!-- 	<dubbo:monitor protocol="registry" /> -->
<!-- 	<dubbo:reference id="statisticsStorage" interface="com.dubboclub.dk.storage.StatisticsStorage" timeout="30000" /> -->

	<!-- <dubbo:registry protocol="${dubbo.registry.protocol}" address="${dubbo.registry.address}" /> -->

	<!-- 暴露服务协议配置 如果需要支持多协议，可以声明多个<dubbo:protocol>标签 -->
	<!-- dubbo="net" -->
	<!-- threads: 线程模型 参考http://dubbo.io/User+Guide-zh.htm#UserGuide-zh-%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B -->
	<!-- <dubbo:protocol name="dubbo" serialization="dubbo" threads="1" accesslog="true" /> -->
	<!-- <dubbo:protocol name="dubbo" serialization="dubbo" accesslog="true" /> -->
	<!-- <dubbo:protocol name="rest" port="9080" contextpath="provider" server="servlet" extension="com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter" /> -->

	<!-- accepts ：服务提供方最大可接受连接数 -->
	<!-- loadbalance ：负载均衡策略，可选值：random,roundrobin,leastactive，分别表示：随机，轮循，最少活跃调用 -->
	<!-- cluster ：集群方式，可选：failover/failfast/failsafe/failback/forking -->
	<!-- async ：是否缺省异步执行，不可靠异步，只是忽略返回值，不阻塞执行线程 ，默认值：false -->
	<!-- accesslog ：默认值：false, 设为true，将向logger中输出访问日志，也可填写访问日志文件路径，直接把访问日志输出到指定文件 -->
	<!-- timeout ：远程服务调用超时时间(毫秒) ,默认1000毫秒 -->
	<!-- actives ：每服务消费者每服务每方法最大并发调用数 -->
	<!-- executes ：服务提供者每服务每方法最大可并行执行请求数 -->
	<!-- weight ：服务权重 -->
	<!-- retries ：远程服务调用重试次数，不包括第一次调用，不需要重试请设为0 缺省值：2 -->


	<!-- cluster="failfast" loadbalance="random" timeout="2000" -->
	<!-- 暴露服务配置 发布服务 -->
	<!-- <dubbo:service ref="remoteCourseAccountService" interface="com.dongao.api.RemoteCourseAccountService" timeout="20000" owner="sunqinbo" group="local"> <dubbo:method 
		name="getCourseAccount" executes="10" timeout="2000"></dubbo:method> </dubbo:service> -->

	<!-- <dubbo:service ref="remoteWriteCourseAccountService" interface="com.dongao.api.RemoteWriteCourseAccountService" timeout="20000" owner="sunqinbo" group="local"> 
		retries="2" 远程服务调用重试次数 修改保证幂等性 <dubbo:method name="createCourseAccount" executes="10" actives="1" retries="0"></dubbo:method> <dubbo:method name="createBatchCourseAccount" 
		executes="10" actives="1" retries="0"></dubbo:method> <dubbo:method name="modifyCourseAccount" executes="10" actives="1" retries="0"></dubbo:method> </dubbo:service> -->

	<dubbo:service ref="userRemoteServiceImpl" interface="com.dongao.data.demo.provider.interfaces.UserRemoteService" timeout="20000"/>
</beans>